{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from 'react';\nconst types = {\n  email: {\n    regex: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n    message: 'Algo valido'\n  }\n};\n\nconst UseForm = type => {\n  _s();\n\n  const [value, setValue] = React.useState('');\n  const [error, setError] = React.useState('');\n\n  function validate(value) {\n    if (type === false) return true;\n\n    if (value.length === 0) {\n      setError('Preencha um valor');\n      return false;\n    } else if (types[type] && types[type].regex.test(value)) {\n      setError(types[type].message);\n      return false;\n    } else {\n      setError(null);\n      return true;\n    }\n  }\n\n  function onChange({\n    target\n  }) {\n    setValue(target.value);\n  }\n\n  return {\n    value,\n    setValue,\n    onChange,\n    validate: () => validate(value),\n    error\n  };\n};\n\n_s(UseForm, \"qxZdhtr9g92c3GV8J/N8QXf7hhg=\");\n\n_c = UseForm;\nexport default UseForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"UseForm\");","map":{"version":3,"sources":["/home/demetrius/Desktop/estagiopaguru/src/Hooks/useForm.js"],"names":["React","types","email","regex","message","UseForm","type","value","setValue","useState","error","setError","validate","length","test","onChange","target"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,KAAK,GAAG;AACZC,EAAAA,KAAK,EAAE;AACLC,IAAAA,KAAK,EAAE,uJADF;AAELC,IAAAA,OAAO,EAAE;AAFJ;AADK,CAAd;;AAOA,MAAMC,OAAO,GAAIC,IAAD,IAAU;AAAA;;AACxB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,KAAK,CAACS,QAAN,CAAe,EAAf,CAA1B;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,KAAK,CAACS,QAAN,CAAe,EAAf,CAA1B;;AACA,WAASG,QAAT,CAAkBL,KAAlB,EAAyB;AACvB,QAAID,IAAI,KAAK,KAAb,EAAoB,OAAO,IAAP;;AACpB,QAAIC,KAAK,CAACM,MAAN,KAAiB,CAArB,EAAwB;AACtBF,MAAAA,QAAQ,CAAC,mBAAD,CAAR;AACA,aAAO,KAAP;AACD,KAHD,MAGO,IAAIV,KAAK,CAACK,IAAD,CAAL,IAAeL,KAAK,CAACK,IAAD,CAAL,CAAYH,KAAZ,CAAkBW,IAAlB,CAAuBP,KAAvB,CAAnB,EAAkD;AACvDI,MAAAA,QAAQ,CAACV,KAAK,CAACK,IAAD,CAAL,CAAYF,OAAb,CAAR;AACA,aAAO,KAAP;AACD,KAHM,MAGA;AACLO,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACA,aAAO,IAAP;AACD;AACF;;AAED,WAASI,QAAT,CAAkB;AAAEC,IAAAA;AAAF,GAAlB,EAA8B;AAC5BR,IAAAA,QAAQ,CAACQ,MAAM,CAACT,KAAR,CAAR;AACD;;AAED,SAAO;AACLA,IAAAA,KADK;AAELC,IAAAA,QAFK;AAGLO,IAAAA,QAHK;AAILH,IAAAA,QAAQ,EAAE,MAAMA,QAAQ,CAACL,KAAD,CAJnB;AAKLG,IAAAA;AALK,GAAP;AAOD,CA5BD;;GAAML,O;;KAAAA,O;AA8BN,eAAeA,OAAf","sourcesContent":["import React from 'react';\n\nconst types = {\n  email: {\n    regex: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n    message: 'Algo valido',\n  },\n};\n\nconst UseForm = (type) => {\n  const [value, setValue] = React.useState('');\n  const [error, setError] = React.useState('');\n  function validate(value) {\n    if (type === false) return true;\n    if (value.length === 0) {\n      setError('Preencha um valor');\n      return false;\n    } else if (types[type] && types[type].regex.test(value)) {\n      setError(types[type].message);\n      return false;\n    } else {\n      setError(null);\n      return true;\n    }\n  }\n\n  function onChange({ target }) {\n    setValue(target.value);\n  }\n\n  return {\n    value,\n    setValue,\n    onChange,\n    validate: () => validate(value),\n    error,\n  };\n};\n\nexport default UseForm;\n"]},"metadata":{},"sourceType":"module"}